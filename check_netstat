#!/bin/sh

#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

PROGNAME=`basename $0`

ST_OK=0
ST_WR=1
ST_CR=2
ST_UK=3

print_help() {
    echo ""
    echo "$PROGNAME is a Nagios plugin to monitor netstat."
    echo ""
    echo "$PROGNAME [-i/--interval] [-w/--warning] [-c/--critical]"
    echo ""
    echo "Options:"
    echo "  --status|-s)"
    echo "    sets the tcp state, e.g. CLOSED-WAIT"
    echo "  --warning|-w)"
    echo "    Sets a warning level for netstat connections. Default is: off"
    echo "  --critical|-c)"
    echo "    Sets a critical level for netstat connections. Default is: off"
    exit $ST_UK
}

parms="$@"
while test -n "$1"; do
    case "$1" in
        --help|-h)
            print_help
            exit $ST_UK
            ;;
        --status|-s)
            status=$2
            shift 2
            ;;
        --warning|-w)
            warn=$2
            shift 2
            ;;
        --critical|-c)
            crit=$2
            shift 2
            ;;
        *)
            echo "$0 $parms: Unknown argument: $1"
            print_help
            exit $ST_UK
            ;;
    esac
done

val_wcdiff() {
    if [ ${warn} -gt ${crit} ]
    then
        wcdiff=1
    fi
}
if [ -z "$status" ]
then
    echo "Error: must provide a tcp status"
    exit $ST_UK
fi
if [ -n "$warn" -a -n "$crit" ]
then
    val_wcdiff
    if [ "$wcdiff" = 1 ]
    then
        echo "Please adjust your warning/critical thresholds. The warning\\
must be lower than the critical level!"
        exit $ST_UK
    fi
fi

netstat_count=$(netstat -tn | grep -c $status)

if [ -n "$warn" -a -n "$crit" ]
then
    if [ "$netstat_count" -ge "$warn" -a "$netstat_count" -lt "$crit" ]
    then
        echo "WARNING - $status=$netstat_count"
        exit $ST_WR
    elif [ "$netstat_count" -ge "$crit" ]
    then
        echo "CRITICAL - $status=$netstat_count"
        exit $ST_CR
    else
        echo "OK - $status=$netstat_count"
        exit $ST_OK
    fi
else
    echo "OK - $status=$netstat_count"
    exit $ST_OK
fi

