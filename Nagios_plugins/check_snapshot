#!/bin/bash
#JIRA: OPS-7378,OPS-7583
#Shell script to get the recent snapshot info

PROGNAME=`basename $0`
VERSION="Version 1.0"

ST_OK=0  # Status OK
ST_WR=1  # Status WARNING
ST_CR=2  # Status CRITICAL
ST_UK=3  # Status UNKNOWN

interval=1

print_version() {
    echo "  $PROGNAME $VERSION "
    
}

print_usage() {
    echo "Arguments are missing:  USAGE: $PROGNAME -W|--warning <value> -C|--critical <value>"

}

print_help() {
    echo ""
    echo "$PROGNAME is a Nagios plugin to monitor recent snapshot time and its age."
    echo "usage parameters."
    echo ""
    echo "$PROGNAME [-W|--warning] [-C|--critical]"
    echo ""
    echo "Options:"
    echo "--version|-v)"
    echo "Defines version"
    echo "--help|-h)"
    echo "Help..."
    echo "-W|--warning)"
    echo "Defines warnings"
    echo "-C|--critical)"
    echo "Defines critical"
    exit $ST_UK
}

sleep $interval
if [ -z "$1" ];then print_usage;exit $ST_UK;fi

sleep $interval

while test -n "$1"; do
    case "$1" in
        --help|-h)
            print_help
            exit $ST_UK
            ;;
        --version|-v)
            print_version $PROGNAME $VERSION
            exit $ST_UK
            ;;
    --warning|-W)
          warn=$2
        if [ -z "$2" ];then print_usage;exit $ST_UK;fi
            shift
            ;;
    --critical|-C)
          crit=$2
        if [ -z "$2" ];then print_usage;exit $ST_UK;fi
            shift
            ;;
        --default)
           DEFAULT=YES
            ;;
            *)
            echo "Unknown argument: $1"
            print_help
            exit $ST_UK
            ;;
    esac
    #if [ "$#" -gt 2 ]; then shift; fi
    shift
done

sleep $interval

#Recent old snapshot has taken by time
recent_old_time_sec() { date  --date="`sudo grep  vol- -B12 /home/repops/snapshot.log |tail -n 25|grep '[0-2][0-9]:[0-5][0-9]:[0-5][0-9]' |sed -en |head -1|sed 's/:$//'`" +%s
}

#Recent snapshot has taken by time in sec
recent_time_sec() { date  --date="`sudo grep  vol- -B12 /home/repops/snapshot.log |tail -n 25|grep '[0-2][0-9]:[0-5][0-9]:[0-5][0-9]' |sed -en |tail -1|sed 's/:$//'`" +%s
}


#Diffrence of recent old snapshot time and a recent snapshot time
difference() { expr $(recent_time_sec) - $(recent_old_time_sec)
}

#Age of the snapshot
age() { (printf '%dh:%dm:%ds\n' $(($(difference)/3600)) $(($(difference)%3600/60)) $(($(difference)%3600/60/60)))
}

echo "Age of the snapshot is $age; recent snapshot has taken at $END\n" >> /dev/null

recent_snap_time=$(grep  vol- -B12 /home/repops/snapshot.log |tail -n 25|grep '[0-2][0-9]:[0-5][0-9]:[0-5][0-9]' |sed -en |tail -1|sed 's/:$//')

if [ -n "$warn" -a -n "$crit" ]
then
    if [ "$(difference)" -ge "$warn" -a "$(difference)" -lt "$crit" ]
    then
        echo "WARNING - Snapshot age: $(age) |Recent snapshot time in sec $(recent_time_sec)"
        exit $ST_WR
    elif [ "$(difference)" -ge "$crit" ]
    then
        echo "CRITICAL - Snapshot is not running as expected, snapshot age is $(age)"
        exit $ST_CR
    else
    echo "OK - Recent snapshot has taken @ $recent_snap_time, snapshot age is $(age)"
        exit $ST_OK
    fi
else
    echo "OK - Recent snapshot has taken @ $recent_snap_time, snapshot age is $(age)"
    exit $ST_OK
fi


#END

#It checks for snapshot age on aws instances. Wehre we enable cronjobs to take snapshots for every 2 hrs. They generate log and updates snapshot log
# We gather info and dispaly in Nagios
